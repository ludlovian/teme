{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["'use strict'\n\nconst sym =\n  typeof Symbol === 'function'\n    ? Symbol\n    : /* istanbul ignore next */ x => '$teme$_' + x\n\nconst kValue = sym('value')\nconst kParents = sym('parents')\nconst kChildren = sym('children')\nconst kFunction = sym('function')\n\n// The main entry point for source streams (as opposed to derived ones)\n//\n// A stream is a function (acting as a get/setter), but inheriting\n// prototypically from Stream\n//\nexport default function Stream (v) {\n  const s = createStream(v)\n  s.end = createStream(false)\n  // special link between stream and its `.end`\n  s.end[kChildren].add(s)\n  return s\n}\n\n// Constructs a stream function, setting its own proerties and prototype\nfunction createStream (value) {\n  function stream () {\n    if (arguments.length !== 0) {\n      setStreamValue(stream, arguments[0])\n    }\n    return stream[kValue]\n  }\n\n  Object.defineProperties(stream, {\n    [kValue]: { value, configurable: true, writable: true },\n    [kChildren]: { value: new Set(), configurable: true, writable: true },\n    [kParents]: { value: [], configurable: true, writable: true },\n    [kFunction]: { value: undefined, configurable: true, writable: true }\n  })\n  Object.setPrototypeOf(stream, Stream.prototype)\n  return stream\n}\n\nlet updates\n\nfunction setStreamValue (stream, value) {\n  const topUpdate = updates == null\n  if (topUpdate) updates = getDescendants(stream)\n\n  stream[kValue] = value\n  Array.from(stream[kChildren]).forEach(child => {\n    if (child.end === stream) return endStream(child)\n    const update = updates.find(u => u.stream === child)\n    if (!update) return updates.push({ stream: child, changed: [stream] })\n    update.changed.push(stream)\n  })\n\n  if (topUpdate) {\n    for (let update = updates.shift(); update; update = updates.shift()) {\n      if (update.changed.length !== 0) {\n        recalculateStream(update.stream, update.changed)\n      }\n    }\n    updates = undefined\n  }\n}\n\n// getDescendants\n//\n// perofrms a topological search to find all descendants of the given stream,\n// returning them in order than they should be updated - from most senior\n// (parent-like) to most junior (child-like)\nfunction getDescendants (root) {\n  const result = []\n  const seen = new Set()\n  // visit actuall creates the array from junior to senior order, processing\n  // the children before adding the current node. Finally we have to reverse\n  // this array to make it senior-to-junior\n  function visit (stream) {\n    if (seen.has(stream)) return\n    seen.add(stream)\n    stream[kChildren].forEach(visit)\n    result.push({ stream, changed: [] })\n  }\n  visit(root)\n  return result.reverse()\n}\n\nfunction recalculateStream (stream, changed) {\n  const args = [...stream[kParents], stream, changed]\n  const ret = stream[kFunction](...args)\n  if (ret != null) setStreamValue(stream, ret)\n}\n\nfunction endStream (stream) {\n  // disconnect from parents\n  stream[kParents].forEach(parent => parent[kChildren].delete(stream))\n  stream[kParents] = []\n  stream.end[kParents] = []\n\n  // set .end to true\n  stream.end[kValue] = true\n\n  // end all downstream from me too\n  Array.from(stream[kChildren]).forEach(endStream)\n}\n\n// The workhorse for all derived streams\n//\nStream.combine = function combine (fn, streams, opts = {}) {\n  const derived = Stream(opts.initial)\n  derived[kFunction] = fn\n  derived[kParents] = streams.slice()\n  streams.forEach(parent => parent[kChildren].add(derived))\n  if (!opts.skip) recalculateStream(derived, streams)\n  return derived\n}\n\n// common methods for all streams\nStream.prototype = {\n  subscribe (fn) {\n    const derived = this.map(fn, { skip: true })\n    return () => derived.end(true)\n  },\n\n  map (fn, opts) {\n    return Stream.combine(s => fn(s()), [this], opts)\n  },\n\n  clone () {\n    return this.map(x => x)\n  },\n\n  merge (...streams) {\n    return Stream.merge(...[this, ...streams])\n  },\n\n  scan (fn, accum) {\n    return this.map(\n      value => {\n        accum = fn(accum, value)\n        return accum\n      },\n      { skip: true, initial: accum }\n    )\n  },\n\n  dedupe (cmp, opts) {\n    if (cmp && typeof cmp === 'object') {\n      opts = cmp\n      cmp = undefined\n    }\n    cmp = cmp || identical\n    opts = opts || {}\n    let prev\n    if (!opts.skip) prev = this()\n    return Stream.combine(\n      (source, target) => {\n        const val = source()\n        if (!cmp(prev, val)) target(val)\n        prev = val\n      },\n      [this],\n      { skip: true, initial: prev }\n    )\n  },\n\n  when (fn) {\n    let resolver\n    let isResolved\n    const freshPromise = () =>\n      new Promise(resolve => {\n        resolver = resolve\n      })\n    const initialPromise = freshPromise()\n    if (fn(this())) {\n      isResolved = true\n      resolver()\n    }\n\n    return this.scan((prom, value) => {\n      if (fn(value)) {\n        if (!isResolved) {\n          isResolved = true\n          resolver()\n        }\n      } else {\n        if (isResolved) {\n          isResolved = false\n          prom = freshPromise()\n        }\n      }\n      return prom\n    }, initialPromise)\n  },\n\n  changed () {\n    return new Promise(resolve => {\n      const unsub = this.subscribe(x => {\n        resolve(x)\n        unsub()\n      })\n    })\n  },\n\n  throttle (period) {\n    let timeout\n    let callDue\n    const update = () => {\n      derived(this())\n      callDue = false\n    }\n    const startTimer = () =>\n      setTimeout(() => {\n        if (callDue) {\n          update()\n          timeout = startTimer()\n        } else {\n          timeout = null\n        }\n      }, period)\n    const derived = Stream.combine(\n      () => {\n        if (timeout) {\n          callDue = true\n        } else {\n          update() // leading edge\n          timeout = startTimer()\n        }\n      },\n      [this],\n      { skip: true }\n    )\n    return derived\n  },\n\n  debounce (period) {\n    let timeout\n    const update = () => {\n      derived(this())\n      timeout = null\n    }\n    const startTimer = () => {\n      if (timeout) clearTimeout(timeout)\n      timeout = setTimeout(update, period)\n    }\n    const derived = Stream.combine(startTimer, [this], { skip: true })\n    return derived\n  }\n}\n\nStream.merge = function merge (...streams) {\n  return Stream.combine(\n    (...args) => {\n      const changed = args.pop()\n      const self = args.pop()\n      changed.forEach(s => self(s()))\n    },\n    streams,\n    { skip: true }\n  )\n}\n\nStream.fromPromise = function fromPromise (p) {\n  const s = Stream()\n  p.then(\n    result => {\n      s(result)\n      s.end(true)\n    },\n    reason => {\n      if (!(reason instanceof Error)) {\n        const err = new Error('Rejected promise')\n        err.promise = p\n        err.reason = reason\n        reason = err\n      }\n      s(reason)\n      s.end(true)\n    }\n  )\n  return s\n}\n\nObject.setPrototypeOf(Stream.prototype, Function.prototype)\n\nfunction identical (a, b) {\n  return a === b\n}\n"],"names":[],"mappings":"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"}